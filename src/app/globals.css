@import "tailwindcss";

@custom-variant dark (&:is(.dark *));

@theme {
	--color-border: hsl(var(--border));
	--color-input: hsl(var(--input));
	--color-ring: hsl(var(--ring));
	--color-background: hsl(var(--background));
	--color-foreground: hsl(var(--foreground));

	--color-primary: hsl(var(--primary));
	--color-primary-foreground: hsl(var(--primary-foreground));

	--color-secondary: hsl(var(--secondary));
	--color-secondary-foreground: hsl(var(--secondary-foreground));

	--color-destructive: hsl(var(--destructive));
	--color-destructive-foreground: hsl(var(--destructive-foreground));

	--color-muted: hsl(var(--muted));
	--color-muted-foreground: hsl(var(--muted-foreground));

	--color-accent: hsl(var(--accent));
	--color-accent-foreground: hsl(var(--accent-foreground));

	--color-popover: hsl(var(--popover));
	--color-popover-foreground: hsl(var(--popover-foreground));

	--color-card: hsl(var(--card));
	--color-card-foreground: hsl(var(--card-foreground));

	--radius-lg: var(--radius);
	--radius-md: calc(var(--radius) - 2px);
	--radius-sm: calc(var(--radius) - 4px);

	--animate-accordion-down: accordion-down 0.2s ease-out;
	--animate-accordion-up: accordion-up 0.2s ease-out;

	--breakpoint-xs: 400px;
	--breakpoint-smb: 720px;

	@keyframes accordion-down {
		from {
			height: 0;
		}
		to {
			height: var(--radix-accordion-content-height);
		}
	}
	@keyframes accordion-up {
		from {
			height: var(--radix-accordion-content-height);
		}
		to {
			height: 0;
		}
	}
}

@utility container {
	margin-inline: auto;
	padding-inline: 2rem;
	@media (width >= --theme(--breakpoint-xs)) {
		max-width: none;
	}
	@media (width >= 1400px) {
		max-width: 1400px;
	}
}

/*
  The default border color has changed to `currentColor` in Tailwind CSS v4,
  so we've added these compatibility styles to make sure everything still
  looks the same as it did with Tailwind CSS v3.

  If we ever want to remove these styles, we need to add an explicit border
  color utility to any element that depends on these defaults.
*/
@layer base {
	*,
	::after,
	::before,
	::backdrop,
	::file-selector-button {
		border-color: var(--color-gray-200, currentColor);
	}
}

@utility text-pretty {
	text-wrap: balance;
	text-wrap: pretty;
}

@utility animation-fade-in {
	animation: fade-in 0.2s ease-out forwards;
}

@utility animation-slide-from-right {
	animation: slide-from-right 0.2s ease-out forwards;
}

@layer base {
	:root {
		--background: 0 0% 100%;
		--foreground: 222.2 84% 4.9%;

		--card: 0 0% 100%;
		--card-foreground: 222.2 84% 4.9%;

		--popover: 0 0% 100%;
		--popover-foreground: 222.2 84% 4.9%;

		--primary: 222.2 47.4% 11.2%;
		--primary-foreground: 210 40% 98%;

		--secondary: 210 40% 96.1%;
		--secondary-foreground: 222.2 47.4% 11.2%;

		--muted: 210 40% 96.1%;
		--muted-foreground: 215.4 16.3% 46.9%;

		--accent: 210 40% 96.1%;
		--accent-foreground: 222.2 47.4% 11.2%;

		--destructive: 0 84.2% 60.2%;
		--destructive-foreground: 210 40% 98%;

		--border: 214.3 31.8% 91.4%;
		--input: 214.3 31.8% 91.4%;
		--ring: 222.2 84% 4.9%;

		--radius: 0.5rem;
	}

	.dark {
		--background: 222.2 84% 4.9%;
		--foreground: 210 40% 98%;

		--card: 222.2 84% 4.9%;
		--card-foreground: 210 40% 98%;

		--popover: 222.2 84% 4.9%;
		--popover-foreground: 210 40% 98%;

		--primary: 210 40% 98%;
		--primary-foreground: 222.2 47.4% 11.2%;

		--secondary: 217.2 32.6% 17.5%;
		--secondary-foreground: 210 40% 98%;

		--muted: 217.2 32.6% 17.5%;
		--muted-foreground: 215 20.2% 65.1%;

		--accent: 217.2 32.6% 17.5%;
		--accent-foreground: 210 40% 98%;

		--destructive: 0 62.8% 30.6%;
		--destructive-foreground: 210 40% 98%;

		--border: 217.2 32.6% 17.5%;
		--input: 217.2 32.6% 17.5%;
		--ring: 212.7 26.8% 83.9%;
	}
}

@layer base {
	* {
		@apply border-border;
	}
	body {
		@apply bg-background text-foreground;
	}

	button,
	a,
	[role="button"],
	summary,
	label:has(input[type="checkbox" i]),
	label:has(input[type="radio" i]) {
		cursor: pointer;
	}

	button:disabled,
	[role="button"][aria-disabled="true"],
	a[aria-disabled="true"],
	a[disabled] {
		cursor: not-allowed;
	}
}

label:has([required]) > span:first-child {
	&::after {
		content: "*";
		@apply ml-1 text-destructive;
	}
}

.CollapsibleContent {
	overflow: hidden;
}
.CollapsibleContent[data-state="open"] {
	animation: slideDown 250ms ease-in-out;
}
.CollapsibleContent[data-state="closed"] {
	animation: slideUp 250ms ease-in-out;
}

input[type="search" i]::-webkit-search-cancel-button {
	display: none;
}

@keyframes slideDown {
	from {
		height: 0;
	}
	to {
		height: var(--radix-collapsible-content-height);
	}
}

@keyframes slideUp {
	from {
		height: var(--radix-collapsible-content-height);
	}
	to {
		height: 0;
	}
}

@keyframes fade-in {
	from {
		opacity: 0;
	}
	to {
		opacity: 1;
	}
}

@keyframes slide-from-right {
	from {
		transform: translateX(100%);
	}
	to {
		transform: translateX(0);
	}
}

.nav-border-reveal::after {
	@apply content-[''] w-full h-px absolute bottom-0 bg-neutral-200;

	animation: nav-border-reveal;
	animation-timeline: scroll();
	animation-range: 0 100px;
}

@keyframes nav-border-reveal {
	0% {
		opacity: 0%;
	}
	100% {
		opacity: 100%;
	}
}

@keyframes psychedelic-fill {
	0% {
		transform: translateX(-120%);
	}
	60% {
		transform: translateX(0%);
	}
	100% {
		transform: translateX(110%);
	}
}

@keyframes psychedelic-texture-pan {
	0% {
		background-position: 0% 20%, 50% 50%, 120% 80%;
	}
	50% {
		background-position: 80% 80%, 0% 100%, -40% 20%;
	}
	100% {
		background-position: 0% 20%, 50% 50%, 120% 80%;
	}
}

@keyframes psychedelic-stripes {
	0% {
		background-position: 0 0, 0 0, 0 0;
		filter: hue-rotate(0deg) saturate(1.3);
	}
	50% {
		background-position: 140px 60px, -120px 80px, 30% 60%;
		filter: hue-rotate(200deg) saturate(1.6);
	}
	100% {
		background-position: 280px 120px, -240px 160px, 70% 20%;
		filter: hue-rotate(360deg) saturate(1.3);
	}
}

@keyframes psychedelic-grid {
	0% {
		background-position: 0 0, 0 0, 0 0;
		transform: rotate(1deg) scale(1.02);
	}
	50% {
		background-position: 80px 100px, -90px 60px, 110px 140px;
		transform: rotate(-4deg) scale(1.07);
	}
	100% {
		background-position: 160px 200px, -180px 120px, 220px 280px;
		transform: rotate(6deg) scale(1.02);
	}
}

@layer components {
	.psychedelic-button {
		position: relative;
		overflow: hidden;
		color: #fff;
		background-color: #0b0123;
		background-image: none;
		border-radius: inherit;
		box-shadow: 0 18px 40px -15px rgba(118, 107, 255, 0.65);
		isolation: isolate;
		transition: transform 0.3s ease, box-shadow 0.3s ease, filter 0.3s ease;
	}

	.psychedelic-button::before {
		content: "";
		position: absolute;
		top: -35%;
		bottom: -35%;
		left: -20%;
		right: -20%;
		background-image:
			repeating-linear-gradient(48deg, rgba(255, 0, 136, 0.85) 0 16px, rgba(255, 0, 136, 0) 16px 32px),
			repeating-linear-gradient(-42deg, rgba(57, 255, 20, 0.7) 0 12px, rgba(57, 255, 20, 0) 12px 28px),
			radial-gradient(circle at 40% 30%, rgba(255, 255, 0, 0.48), rgba(255, 255, 0, 0) 55%);
		background-size: 180% 180%, 160% 160%, 120% 120%;
		mix-blend-mode: screen;
		transform: translateX(-120%);
		transition: transform 0.6s ease, opacity 0.4s ease;
		opacity: 0.85;
		animation: psychedelic-stripes 9s linear infinite;
		pointer-events: none;
	}

	.psychedelic-button::after {
		content: "";
		position: absolute;
		top: -25%;
		left: -25%;
		right: -25%;
		bottom: -25%;
		background-image:
			repeating-radial-gradient(circle at 10% 15%, rgba(255, 255, 255, 0.2) 0 3px, rgba(255, 255, 255, 0) 3px 18px),
			repeating-linear-gradient(90deg, rgba(0, 200, 255, 0.35) 0 6px, rgba(0, 200, 255, 0) 6px 18px),
			repeating-linear-gradient(0deg, rgba(255, 94, 0, 0.3) 0 10px, rgba(255, 94, 0, 0) 10px 24px);
		background-size: 200% 200%, 180% 180%, 220% 220%;
		background-blend-mode: screen, color-dodge, color-burn;
		mix-blend-mode: screen;
		opacity: 0.75;
		pointer-events: none;
		animation: psychedelic-grid 12s linear infinite alternate, psychedelic-texture-pan 9s ease-in-out infinite;
		transition: opacity 0.35s ease, filter 0.35s ease;
	}

	.psychedelic-button:hover {
		transform: translateY(-1px) scale(1.01);
		box-shadow: 0 22px 50px -18px rgba(118, 107, 255, 0.75);
	}

	.psychedelic-button:focus-visible {
		transform: translateY(-0.5px) scale(1.005);
	}

	.psychedelic-button:hover::before,
	.psychedelic-button:focus-visible::before {
		animation: psychedelic-fill 1.2s ease forwards, psychedelic-stripes 6s linear infinite;
		opacity: 1;
	}

	.psychedelic-button:hover::after,
	.psychedelic-button:focus-visible::after {
		opacity: 1;
		filter: saturate(1.3) contrast(1.2);
	}

	.psychedelic-button:disabled {
		animation-play-state: paused;
		box-shadow: none;
		filter: saturate(0.6) brightness(0.85);
	}
}
